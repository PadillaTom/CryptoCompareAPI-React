{"ast":null,"code":"var _jsxFileName = \"/Users/padillatom/PadillaTom/Tomas/Programacion/Portfolio Projects/Crypto API/src/Context/CoinsContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // *** MOCK DATA ***\n\nimport { Data } from \"./mockData/allCoins\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockUrl = Data; // Root URL:\n\nconst rootUrl = \"https://min-api.cryptocompare.com/data\"; // Creating Context:\n\nconst CoinsContext = /*#__PURE__*/React.createContext();\n\nconst CoinsProvider = ({\n  children\n}) => {\n  _s();\n\n  // *** MOCK DATA ***\n  const [allCoins, setAllCoins] = useState(\"\");\n\n  const fetchAllCoins = () => {\n    axios.get(Data).then(response => {\n      const myCoins = response.Data;\n      setAllCoins(myCoins);\n    });\n  };\n\n  useEffect(() => {\n    fetchAllCoins();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CoinsContext.Provider, {\n    value: allCoins,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CoinsProvider, \"f3NNUo19sUiEWCyVqqyDw7vV+b4=\");\n\n_c = CoinsProvider;\nexport { CoinsProvider, CoinsContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinsProvider\");","map":{"version":3,"sources":["/Users/padillatom/PadillaTom/Tomas/Programacion/Portfolio Projects/Crypto API/src/Context/CoinsContext.js"],"names":["React","useEffect","useState","axios","Data","mockUrl","rootUrl","CoinsContext","createContext","CoinsProvider","children","allCoins","setAllCoins","fetchAllCoins","get","then","response","myCoins"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAAQC,IAAR,QAAmB,qBAAnB;;AACA,MAAMC,OAAO,GAAGD,IAAhB,C,CAEA;;AACA,MAAME,OAAO,GAAG,wCAAhB,C,CAGA;;AACA,MAAMC,YAAY,gBAAGP,KAAK,CAACQ,aAAN,EAArB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAElC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMW,aAAa,GAAG,MAAM;AACxBV,IAAAA,KAAK,CAACW,GAAN,CAAUV,IAAV,EACCW,IADD,CACMC,QAAQ,IAAI;AACd,YAAMC,OAAO,GAAGD,QAAQ,CAACZ,IAAzB;AACAQ,MAAAA,WAAW,CAACK,OAAD,CAAX;AACH,KAJD;AAKH,GAND;;AAQAhB,EAAAA,SAAS,CAAC,MAAI;AACVY,IAAAA,aAAa;AAChB,GAFQ,EAEP,EAFO,CAAT;AAKA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEF,QAA9B;AAAA,cACFD;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CArBD;;GAAMD,a;;KAAAA,a;AAuBN,SAAQA,aAAR,EAAuBF,YAAvB","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\n// *** MOCK DATA ***\nimport {Data} from \"./mockData/allCoins\";\nconst mockUrl = Data;\n\n// Root URL:\nconst rootUrl = \"https://min-api.cryptocompare.com/data\";\n\n\n// Creating Context:\nconst CoinsContext = React.createContext();\n\nconst CoinsProvider = ({children}) => {\n\n    // *** MOCK DATA ***\n    const [allCoins, setAllCoins] = useState(\"\");\n    \n    const fetchAllCoins = () => {\n        axios.get(Data)  \n        .then(response => {\n            const myCoins = response.Data;\n            setAllCoins(myCoins);\n        })\n    };\n\n    useEffect(()=>{\n        fetchAllCoins()\n    },[]);\n\n\n    return <CoinsContext.Provider value={allCoins}>\n        {children}\n    </CoinsContext.Provider>\n}\n\nexport {CoinsProvider, CoinsContext};\n\n"]},"metadata":{},"sourceType":"module"}